name: Update and PR akka-samples

on:
  workflow_dispatch: # to trigger manually
  workflow_run:
    workflows: ["Publish"]
    types:
      - completed

jobs:
  debug:
    if: github.event_name != 'workflow_dispatch'
    runs-on: ubuntu-22.04
    steps:
      - name: Debugging
        run: |
          echo "Conclusion from `Publish` workflow: ${{ github.event.workflow_run.conclusion }}
          echo "Tag created from `Publish` workflow: ${{ github.ref }}

  update-samples:
    runs-on: ubuntu-22.04
    # run only when `publish` workflow is successful or this workflow manually triggered
    if: (github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch')
    strategy:
      fail-fast: false
      matrix:
        include:
          - { sample: "shopping-cart-quickstart", sampleRepo: "akka-samples/shopping-cart-quickstart" }

    steps:
      - name: Checkout
        # https://github.com/actions/checkout/releases
        # v4.1.1
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
        with:
          # we don't know what commit the last tag was it's safer to get entire repo so previousStableVersion resolves
          fetch-depth: 0

      - name: Cache Coursier cache
        # https://github.com/coursier/cache-action/releases
        # v6.4.5
        uses: coursier/cache-action@1ff273bff02a8787bc9f1877d347948af647956d

      - name: Set up JDK 21
        # https://github.com/coursier/setup-action/releases
        # v1.3.5
        uses: coursier/setup-action@7bde40eee928896f074dbb76d22dd772eed5c65f
        with:
          jvm: temurin:1.21

#      - name: Determine SDK version
#        id: determine_sdk_version
#        run: |-
#          .github/determine-sdk-version.sh
#          SDK_VERSION="$(cat ~/akka-javasdk-version.txt)"
#          echo "SDK version: '${SDK_VERSION}'"
#          echo "sdk_version=${SDK_VERSION}" >> $GITHUB_OUTPUT

#      - name: Determine SDK version (manual triggered) # provisional until normal flow gets fixed)
#        if:  github.event_name == 'workflow_dispatch'
#        id: determine_sdk_version_manual_triggered
#        run: |-
#          .github/determine-sdk-version.sh
#          SDK_VERSION="$(cat ~/akka-javasdk-version.txt | sed 's/-.*//')"
#          echo "SDK version: '${SDK_VERSION}'"
#          echo "sdk_version=${SDK_VERSION}" >> $GITHUB_OUTPUT

      - name: Update SDK versions and bundle
#        env:
#          SDK_VERSION: ${{ steps.determine_sdk_version.outputs.sdk_version || steps.determine_sdk_version_manual_triggered.outputs.sdk_version }}
        run: |-
          echo "Updating ${{ matrix.sample }}"
          #./updateSdkVersions.sh all
          ./docs/bin/bundle.sh --zip "target/bundle/${{ matrix.sample }}.zip" samples/${{ matrix.sample }}
          cat ./docs/build/bundle/${{ matrix.sample }}/pom.xml

      - name: Checkout
        # https://github.com/actions/checkout/releases/tag/v4.2.2
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          repository: ${{ matrix.sampleRepo }}
          path: akka-samples-${{ matrix.sample }}
          ref: main

      - name: Open PR with changes
        env:
          COMMIT_URL: "https://github.com/${{ github.repository }}/commit/"
          GH_TOKEN: ${{ secrets.AKKA_SAMPLES_RW_ACCESS_TOKEN }}
        run: |
          cd akka-samples-${{ matrix.sample }}
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git remote add origin-rw https://${{ secrets.AKKA_SAMPLES_RW_ACCESS_TOKEN }}@github.com/${{ matrix.sampleRepo }}.git
          BRANCH=update-sdk-${SDK_VERSION}
          git checkout -b $BRANCH
          rsync -a ../docs/build/bundle/${{ matrix.sample }}/ ./
          git add .
          git commit . -m "chore: bump SDK version to ${SDK_VERSION}"
          git push --set-upstream origin-rw $BRANCH
          gh pr create -B main -t "Auto PR - Bump SDK version to ${SDK_VERSION}" \
              -b "This PR should update SDK (pom.xml) and latest source code.  [$GITHUB_SHA]($COMMIT_URL$GITHUB_SHA)"
