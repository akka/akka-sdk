akka.platform.jvm.sdk {
    components {
        consumer=[
          "com.example.wiring.eventsourcedentities.counter.IncreaseConsumer",
          "com.example.wiring.eventsourcedentities.counter.IncreaseActionWithIgnore",
          #"com.example.wiring.pubsub.PublishESToTopic",
          #"com.example.wiring.pubsub.SubscribeToCounterEventsTopic",
          "com.example.wiring.pubsub.PublishVEToTopic",
          #"com.example.wiring.pubsub.SubscribeToCustomersTopic",
          #"com.example.wiring.pubsub.PublishTopicToTopic",
          #"com.example.wiring.pubsub.SubscribeToBytesFromTopic",
          #"com.example.wiring.pubsub.SubscribeToCustomers2Topic",
          #"com.example.wiring.pubsub.PublishBytesToTopic",
          "com.example.wiring.keyvalueentities.user.SubscribeUserConsumer"
        ]
        timed-action=[
            "com.example.wiring.actions.echo.EchoAction",
            #"com.example.wiring.pubsub.PublishESToTopic",
            "com.example.wiring.actions.echo.ActionWithPrimitives",
            #"com.example.wiring.pubsub.SubscribeToCounterEventsTopic",
            #"com.example.wiring.pubsub.SubscribeToCustomersTopic",
            "com.example.wiring.actions.echo.ActionWithMetadata",
            "com.example.wiring.actions.headers.EchoAction",
            "com.example.wiring.keyvalueentities.user.ValidateUserAction",
            #"com.example.wiring.pubsub.PublishTopicToTopic",
            #"com.example.wiring.pubsub.SubscribeToBytesFromTopic",
            #"com.example.wiring.pubsub.SubscribeToCustomers2Topic",
            #"com.example.wiring.pubsub.PublishBytesToTopic",
        ]
        event-sourced-entity=[
            #"com.example.wiring.eventsourcedentities.tracingcounter.TCounterEntity",
            "com.example.wiring.eventsourcedentities.headers.ForwardHeadersESEntity",
            "com.example.wiring.eventsourcedentities.counter.CounterEntity",
            "com.example.wiring.workflowentities.FailingCounterEntity"
        ]
        key-value-entity=[
            "com.example.wiring.keyvalueentities.customer.CustomerEntity",
            "com.example.wiring.keyvalueentities.user.UserEntity",
            "com.example.wiring.workflowentities.WalletEntity",
            "com.example.wiring.keyvalueentities.headers.ForwardHeadersValueEntity",
            "com.example.wiring.keyvalueentities.user.AssignedCounterEntity"
        ]
        view=[
            "com.example.wiring.views.UsersByEmailAndName",
            "com.example.wiring.views.CountersByValueWithIgnore",
            "com.example.wiring.views.UsersByName",
            "com.example.wiring.views.UsersView",
            "com.example.wiring.views.UserCountersView",
            "com.example.wiring.views.CustomerByCreationTime",
            "com.example.wiring.views.CountersByValue",
            "com.example.wiring.views.UserWithVersionView",
            "com.example.wiring.views.CountersByValueSubscriptions",
            "com.example.wiring.pubsub.ViewFromCounterEventsTopic"
        ]
        workflow=[
            "com.example.wiring.workflowentities.TransferWorkflow",
            "com.example.wiring.workflowentities.WorkflowWithTimer",
            "com.example.wiring.workflowentities.DummyWorkflow",
            "com.example.wiring.workflowentities.TransferWorkflowWithoutInputs",
            "com.example.wiring.workflowentities.WorkflowWithoutInitialState",
            "com.example.wiring.workflowentities.TransferWorkflowWithFraudDetection",
            "com.example.wiring.workflowentities.WorkflowWithDefaultRecoverStrategy",
            "com.example.wiring.workflowentities.WorkflowWithRecoverStrategy",
            "com.example.wiring.workflowentities.WorkflowWithRecoverStrategyAndAsyncCall",
            "com.example.wiring.workflowentities.WorkflowWithStepTimeout",
            "com.example.wiring.workflowentities.WorkflowWithTimeout"
        ]
    }
    kalix-service= "com.example.Setup"
}
