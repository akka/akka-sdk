{
  "repositories": [
    {
      "title": "Hello world agent",
      "description": "This sample uses an agent and LLM to generate greetings in different languages. It illustrates how the agent maintains contextual history in a session memory.",
      "language": "java",
      "url": "https://github.com/akka-samples/helloworld-agent",
      "level": "Beginner"
    },
    {
      "title": "Multi Agent AI activity suggestion system",
      "description": "A sample application demonstrating how to build a multi-agent system using Akka and an LLM model.",
      "language": "java",
      "url": "https://github.com/akka-samples/multi-agent"
    },
    {
      "title": "RAG workflow AI agent",
      "description": "This sample illustrates how to build an AI agent that performs a RAG workflow.",
      "language": "java",
      "url": "https://github.com/akka-samples/ask-akka-agent"
    },
    {
      "title": "Travel Agent",
      "description": "The Travel Planner Agent is an AI-powered application built on the Akka SDK that helps users create personalized travel itineraries.",
      "language": "java",
      "url": "https://github.com/akka-samples/travel-agent"
    },
    {
      "title": "Medical Discharge Summary Tagging System",
      "description": "This experiment investigates whether an AI Agentic System can automatically tag medical discharge summaries based on the necessity of hospitalization.",
      "language": "java",
      "url": "https://github.com/akka-samples/medical-tagging-agent"
    },
    {
      "title": "IoT sensor monitoring agent",
      "description": "This sample is a temperature monitoring system that collects, aggregates, and analyzes temperature data from IoT sensors. The system uses AI to generate insights about temperature trends and anomalies across different locations. Collects and aggregates temperature data using Key Value Entities. OpenAI is used for anomaly and trend detection.",
      "language": "java",
      "url": "https://github.com/akka-samples/temperature-monitoring-agent",
      "concepts": "Agent, IoT, Trend analysis, Anomaly detection, Entity, OpenAI",
      "level": "Intermediate"
    },
    {
      "title": "Release note summary generation agent",
      "description": "This sample is designed to run every time there is a release from configured GitHub repositories. It interacts with Anthropic Claude from an agent and uses tools to retrieve detailed information from GitHub. Entities are used for storing release summaries. A timed action looks for new releases periodically and creates the summary using the LLM.",
      "language": "java",
      "url": "https://github.com/akka-samples/changelog-agent",
      "concepts": "Agent, Entity, Timed Action, Anthropic Claude, Tools, Summarization",
      "level": "Intermediate"
    },
    {
      "title": "Agentic customer service workflow",
      "description": "The real-estate customer service agent demonstrates how to combine Akka features with an LLM model. It illustrates an agentic workflow for customer service. It processes incoming real-estate inquiries, analyzes the content to extract details, provides follow-up when needed and saves the collected information for future reference.",
      "language": "java",
      "url": "https://github.com/akka-samples/real-estate-cs-agent",
      "concepts": "Agent, Workflow, Analysis, Detail extraction, Human in the loop, Agent Memory",
      "level": "Intermediate"
    },
    {
      "title": "Tool using trip booking agent",
      "description": "This app represents a travel agency that searches for flights and accommodations. Itâ€™s composed by an LLM (Anthropic) using Spring AI and AI tools to find flights, accommodations and sending mails.",
      "language": "java",
      "url": "https://github.com/akka-samples/trip-agent",
      "concepts": "Agent, Tools, Anthropic, Spring AI, Workflow"
    },
    {
      "title": "Agent sensor data analysis",
      "description": "This sample illustrates an AI agent that uses an LLM to analyze data from fitness trackers, medical records and other sensors. It integrates with Fitbit and MongoDB Atlas.",
      "language": "java",
      "url": "https://github.com/akka-samples/healthcare-agent",
      "concepts": "Agent, Analysis, Integrations, Vector database",
      "level": "Intermediate"
    },
    {
      "title": "Shopping cart microservice",
      "description": "This sample shows a very simple microservice implementing a shopping cart with an event-sourced entity.",
      "language": "java",
      "url": "https://github.com/akka-samples/shopping-cart-with-view",
      "concepts": "Entity, Events, HTTP Endpoint, View",
      "level": "Beginner"
    },
    {
      "title": "Customer registry microservice",
      "description": "This sample illustrates the use of entities and query capabilities with a view. This example shows a simple set of traditional queries and data mutations through events.",
      "language": "java",
      "url": "https://github.com/akka-samples/event-sourced-customer-registry",
      "concepts": "Entity, View, HTTP Endpoint",
      "level": "Beginner"
    },
    {
      "title": "Multiple Entity orchestration with a Workflow",
      "description": "This example illustrates a funds transfer workflow between two wallets.",
      "language": "java",
      "url": "https://github.com/akka-samples/transfer-workflow-compensation",
      "concepts": "Transactions, Workflow, Entity",
      "level": "Intermediate"
    },
    {
      "title": "External service orchestration with a Workflow",
      "description": "This example illustrates a funds transfer workflow between two wallets managed by external service.",
      "language": "java",
      "url": "https://github.com/akka-samples/transfer-workflow-orchestration",
      "concepts": "Transactions, Workflow",
      "level": "Intermediate"
    },
    {
      "title": "User registration with a choreography saga",
      "description": "This example is a user registration service implemented as a choreography saga.",
      "language": "java",
      "url": "https://github.com/akka-samples/choreography-saga-quickstart",
      "concepts": "Choreography, Saga, Workflow",
      "level": "Advanced"
    },
    {
      "title": "Akka Chess",
      "description": "Embedded UI, Entity, Workflow, View, Timed Action",
      "language": "java",
      "url": "https://github.com/akka-samples/akka-chess",
      "concepts": "Entity, Events, HTTP Endpoint, Akka Persistence",
      "level": "Advanced"
    },
    {
      "title": "Event Sourced Counter with Broker Integration",
      "description": "This project demonstrates the use of an Event Sourced Entity and the different ways to consume and produce from/to a broker.",
      "language": "java",
      "url": "https://github.com/akka-samples/event-sourced-counter-brokers"
    },
    {
      "title": "JWT HTTP Endpoint",
      "description": "This project demonstrates the use of JWT in a HTTP Endpoint.",
      "language": "java",
      "url": "https://github.com/akka-samples/endpoint-jwt"
    }
  ]
}
